service: secret-santa-api

custom:
  tableName: 'secret-santa-api-${self:provider.stage}'
  whitelist: 'http://localhost:3000,http://secretsanta.mineshdesigns.co.uk,http://secretsanta.mineshdesigns.co.uk.s3-website-eu-west-1.amazonaws.com'
  jwtSecret: 'sn0wman2018$'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["DynamoDBTable", "Arn" ] }
        - { "Fn::Join": [ "/", [
            { "Fn::GetAtt": ["DynamoDBTable", "Arn" ] }, "index", "groupID-index"
          ] ] }
  environment:
    SECRET_SANTA_TABLE: ${self:custom.tableName}
    WHITELIST: ${self:custom.whitelist}
    JWT_SECRET: ${self:custom.jwtSecret}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

resources:
  Resources:
    DynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: memberName
            AttributeType: S
          -
            AttributeName: groupID
            AttributeType: S
        KeySchema:
          -
            AttributeName: memberName
            KeyType: HASH
          -
            AttributeName: groupID
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
        - IndexName: groupID-index
          KeySchema:
          - AttributeName: groupID
            KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}